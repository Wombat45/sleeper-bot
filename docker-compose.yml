version: '3.8'

services:
  # MCP Server - Sleeper API integration
  mcp-server:
    build:
      context: ./mcp-server
      dockerfile: Dockerfile
    container_name: fantasy-football-mcp
    ports:
      - "8000:8000"
    environment:
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8000
      - SERVER_ENVIRONMENT=production
      - SLEEPER_API_BASE_URL=https://api.sleeper.app/v1
      - SLEEPER_API_RATE_LIMIT_PER_MINUTE=1000
      - SLEEPER_API_TIMEOUT_SECONDS=30
      - CACHE_TTL_SECONDS=300
      - CACHE_MAX_SIZE=1000
    volumes:
      - ./mcp-server:/app
      - mcp-cache:/app/cache
    networks:
      - fantasy-football
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # LLM Agent - Query processing
  llm-agent:
    build:
      context: ./llm-agent
      dockerfile: Dockerfile
    container_name: fantasy-football-agent
    ports:
      - "8001:8000"
    environment:
      - API_KEY=${API_KEY:-your-api-key-here}
      - MCP_SERVER_URL=http://mcp-server:8000
      - DEFAULT_LEAGUE_ID=${DEFAULT_LEAGUE_ID:-}
      - LLM_PROVIDER=digitalocean
      - LLM_URL=https://td4bxjc626e5xweih26eppev.agents.do-ai.run/api/v1/chat/completions
      - LLM_API_KEY=O1AD1a0JeIl3B-T9sJvvBgHEHfwIoPze
      - LLM_MODEL=llama3.2:latest
      - HOST=0.0.0.0
      - PORT=8000
    volumes:
      - ./llm-agent:/app
    networks:
      - fantasy-football
    depends_on:
      mcp-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Discord Bot - User interface
  discord-bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    container_name: fantasy-football-bot
    environment:
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - LLM_API_URL=http://llm-agent:8000
      - API_KEY=${API_KEY:-your-api-key-here}
      - COMMAND_PREFIX=${COMMAND_PREFIX:-!}
    volumes:
      - ./bot:/app
      - ./.env:/app/.env:ro
    networks:
      - fantasy-football
    depends_on:
      llm-agent:
        condition: service_healthy
    restart: unless-stopped

  # Optional: Redis for caching (uncomment if you want to use Redis)
  # redis:
  #   image: redis:7-alpine
  #   container_name: fantasy-football-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis-data:/data
  #   networks:
  #     - fantasy-football
  #   restart: unless-stopped

  # Optional: Nginx reverse proxy (uncomment for production)
  # nginx:
  #   image: nginx:alpine
  #   container_name: fantasy-football-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./nginx/ssl:/etc/nginx/ssl:ro
  #   networks:
  #     - fantasy-football
  #   depends_on:
  #     - mcp-server
  #     - llm-agent
  #   restart: unless-stopped

volumes:
  mcp-cache:
    driver: local
  # redis-data:
  #   driver: local

networks:
  fantasy-football:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
